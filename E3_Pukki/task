from machine import Pin, I2C, ADC
from led import Led
from piotimer import Piotimer
import micropython
import time
from ssd1306 import SSD1306_I2C
micropython.alloc_emergency_exception_buf(200)

i2c = I2C(1, sda=Pin(14), scl = Pin(15), freq = 400000)
oled = SSD1306_I2C(128, 64, i2c)
adc = ADC(26)
led = Led(20)
max_samples = 200
short_average = 15
long_average = 100
beat_threshold = 150
finger_threshold = 2000
history = []
count = 0
value = 0

def updateScreen():
    y = HR
    y = int(y)
    oled.fill(0)
    oled.text("																	", 0, 0, 1)
    oled.text("																	", 0, 55, 1)
    oled.text("	 [Heart Rate]", 0, 10, 1)
    oled.text("	", 0, 20, 1)
    oled.text("	      "+str(y), 0, 30, 1)
    oled.text("	", 0, 40, 1)
    oled.text("	", 120, 45, 1)
    oled.text("	", 0, 45, 1)
    oled.text("	", 120, 40, 1)
    oled.text("	", 120, 30, 1)
    oled.text("	", 120, 20, 1)
    oled.text("	", 120, 10, 1)
    oled.show()

def finger_detected():
    avg1 = sum(history[-short_average:])/short_average
    avg2 = sum(history[-long_average:])/long_average
    if avg1-avg2 > beat_threshold:
        led.value(1)
    else:
        led.value(0)
        
def read_sample(tid):
    global value
    value = adc.read_u16()    
    
timer = Piotimer(mode=Piotimer.PERIODIC, freq=250, callback=read_sample)

while True:
    history.append(value)
    history = history[-max_samples:]
    
    if max(history)-min(history) < finger_threshold:
        finger_detected()
        if count == 0:
            start = time.ticks_ms()
            count = 1
        else:
            if time.ticks_diff(time.ticks_ms(), start) > 300:
                PPI = time.ticks_diff(time.ticks_ms(), start)
                HR = 60/(PPI/1000)
                print(HR)
                updateScreen()
                count = 0
    else:
        led.value(0)
